<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_TestSplit" Id="{c399aa91-0228-4585-b4f7-87e722765771}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TestSplit EXTENDS TcUnit.FB_TestSuite]]></Declaration>
    <Implementation>
      <ST><![CDATA[testSplit();]]></ST>
    </Implementation>
    <Method Name="testSplit" Id="{71d86309-488d-4c73-9afa-751071041933}">
      <Declaration><![CDATA[METHOD testSplit : BOOL
VAR
	sToSplit		: STRING(255) := 'Hello,this,is,split,test';
	sSplit			: ARRAY[0..Parameters.iSplitArraySize] OF STRING(255);
	sExpected		: ARRAY[0..Parameters.iSplitArraySize] OF STRING(255) := ['Hello', 'this', 'is', 'split', 'test'] ;
	
	i				: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Test('testSplit');
// Arrange

// Act
sSplit := F_STRINGSPLIT(sToSplit, ',');

// Assert
FOR i := 0 TO Parameters.iSplitArraySize DO
	AssertEquals_STRING( Expected := sExpected[i],
				  Actual := sSplit[i],
				  Message := CONCAT('testSplit Failed to split : ', sToSplit));
END_FOR
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TestSplit">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestSplit.testSplit">
      <LineId Id="19" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>