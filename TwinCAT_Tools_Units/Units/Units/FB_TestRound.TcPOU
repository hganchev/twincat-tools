<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_TestRound" Id="{d168d027-9d5e-46ed-9155-14182fbf4f27}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TestRound EXTENDS TcUnit.FB_TestSuite

]]></Declaration>
    <Implementation>
      <ST><![CDATA[//REAL
testRoundRealFail();
testRoundRealSuccess();
testRoundRealToHigh();
testRoundRealToHigh2();

// LREAL
testRoundLREALFail();
testRoundLREALSuccess();
testRoundLREALToHigh();
testRoundLREALToHigh2();]]></ST>
    </Implementation>
    <Method Name="testRoundLREALFail" Id="{0190ed15-4c58-455b-af97-ebeb1778d87e}">
      <Declaration><![CDATA[METHOD testRoundLREALFail
VAR
	rValue 		: LREAL := 1000.222222;
	Actual		: LREAL;
	Expected  	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundLREALFail');

// Act
Actual := 1000.222; 

// Arrange
Expected := 1000.22;

// Assert
AssertFalse( Condition := Expected = Actual, 
			 Message := 'testRoundLREALFail Failed to round LREAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundLREALSuccess" Id="{db3ba594-9ac6-4320-9154-cadf6b53cb1a}">
      <Declaration><![CDATA[METHOD testRoundLREALSuccess
VAR
	rValue 		: LREAL := 1000.222222;
	Actual		: LREAL;
	Expected  	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundLREALSuccess');

// Act
Actual := F_ROUNDLREAL(rValue, 2); 

// Arrange
Expected := 1000.22;

// Assert
AssertEquals(Expected := Expected, 
			 Actual := Actual,
			 Message := 'testRoundLREALSuccess Failed to round LREAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundLREALToHigh" Id="{2a44110a-28bc-4805-9a4e-e040b015d8a3}">
      <Declaration><![CDATA[METHOD testRoundLREALToHigh
VAR
	rValue 		: LREAL := 1000.226666;
	Actual		: LREAL;
	Expected  	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundLREALToHigh');

// Act
Actual := F_ROUNDLREAL(rValue, 2); 

// Arrange
Expected := 1000.23;

// Assert
AssertEquals_LREAL( Expected :=  Expected, 
				Actual := Actual,
				Delta := 0.00,
			 	Message := 'testRoundLREALToHigh Failed to round LREAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundLREALToHigh2" Id="{77181605-9ff0-4b2c-a468-c7ebca74ce8d}">
      <Declaration><![CDATA[METHOD testRoundLREALToHigh2
VAR
	rValue 		: LREAL := 1000.95;
	Actual		: LREAL;
	Expected  	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundLREALToHigh2');

// Act
Actual := F_ROUNDLREAL(rValue, 1); 

// Arrange
Expected := 1001.0;

// Assert
AssertEquals_LREAL( Expected :=  Expected, 
				Actual := Actual,
				Delta := 0.00,
			 	Message := 'testRoundLREALToHigh2 Failed to round LREAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundRealFail" Id="{6c893c88-a242-439a-98ee-31082f13b45e}">
      <Declaration><![CDATA[METHOD testRoundRealFail
VAR
	rValue 		: REAL := 1000.222222;
	Actual		: REAL;
	Expected  	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundRealFail');

// Act
Actual := 1000.222; 

// Arrange
Expected := 1000.22;

// Assert
AssertFalse( Condition := Expected = Actual, 
			 Message := 'testRoundRealFail Failed to round REAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundRealSuccess" Id="{348be370-bcb0-42a0-96a8-49bab6374bd8}">
      <Declaration><![CDATA[METHOD testRoundRealSuccess
VAR
	rValue 		: REAL := 1000.22222;
	Actual		: REAL;
	Expected  	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundRealSuccess');

// Act
Actual := F_ROUNDREAL(rValue, 2); 

// Arrange
Expected := 1000.22;

// Assert
AssertEquals(Expected := Expected, 
			 Actual := Actual,
			 Message := 'testRoundRealSuccess Failed to round REAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundRealToHigh" Id="{d840b773-6dc8-4f18-baa5-2e617da52be4}">
      <Declaration><![CDATA[METHOD testRoundRealToHigh
VAR
	rValue 		: REAL := 1000.226666;
	Actual		: REAL;
	Expected  	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundRealToHigh');

// Act
Actual := F_ROUNDREAL(rValue, 2); 

// Arrange
Expected := 1000.23;

// Assert
AssertEquals_REAL( Expected :=  Expected, 
				Actual := Actual,
				Delta := 0.00,
			 	Message := 'testRoundRealToHigh Failed to round REAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="testRoundRealToHigh2" Id="{4257ebb0-fd6a-4a94-86b6-099df61f20c3}">
      <Declaration><![CDATA[METHOD testRoundRealToHigh2
VAR
	rValue 		: REAL := 1000.95;
	Actual		: REAL;
	Expected  	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('testRoundRealToHigh2');

// Act
Actual := F_ROUNDREAL(rValue, 1); 

// Arrange
Expected := 1001.0;

// Assert
AssertEquals_REAL( Expected :=  Expected, 
				Actual := Actual,
				Delta := 0.00,
			 	Message := 'testRoundRealToHigh2 Failed to round REAL');
			 
			 
			 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TestRound">
      <LineId Id="28" Count="3" />
      <LineId Id="36" Count="0" />
      <LineId Id="32" Count="3" />
      <LineId Id="14" Count="0" />
      <LineId Id="37" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundLREALFail">
      <LineId Id="9" Count="13" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundLREALSuccess">
      <LineId Id="6" Count="14" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundLREALToHigh">
      <LineId Id="6" Count="15" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundLREALToHigh2">
      <LineId Id="9" Count="15" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundRealFail">
      <LineId Id="9" Count="9" />
      <LineId Id="20" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundRealSuccess">
      <LineId Id="16" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="18" Count="5" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundRealToHigh">
      <LineId Id="6" Count="9" />
      <LineId Id="23" Count="1" />
      <LineId Id="16" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestRound.testRoundRealToHigh2">
      <LineId Id="12" Count="15" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>